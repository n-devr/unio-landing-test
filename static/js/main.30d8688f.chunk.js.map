{"version":3,"sources":["components/ScheduleADemo.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ScheduleADemo","meetingsURL","embedScriptURL","useEffect","script","document","createElement","src","body","appendChild","className","data-src","App","Fragment","Navbar","bg","variant","Brand","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"yOAyBeA,EAlBqC,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAWhE,OARAC,qBAAU,WAEN,IAAMC,EAA4BC,SAASC,cAAc,UACzDF,EAAOG,IAAML,EACbG,SAASG,KAAKC,YAAYL,KAE3B,CAACF,IAGA,8BACI,qBAAKQ,UAAU,4BAA4BC,WAAUV,O,MCAlDW,MAdf,WACE,OACE,eAAC,IAAMC,SAAP,WACI,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAA1B,SACI,cAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,QAAnB,iCAEJ,cAAC,EAAD,CACIjB,YAAY,sDACZC,eAAe,6ECAZiB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzB,SAAS0B,eAAe,SAM1BZ,M","file":"static/js/main.30d8688f.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\n\ninterface ScheduleADemoProps {\n    meetingsURL: string,\n    embedScriptURL: string\n}\n\nconst ScheduleADemo: React.FC<ScheduleADemoProps> = ({ meetingsURL, embedScriptURL }) => {\n\n    // create the HubSpot script element and append it to the body\n    useEffect(() => {\n\n        const script: HTMLScriptElement = document.createElement('script');\n        script.src = embedScriptURL;\n        document.body.appendChild(script);\n\n    }, [embedScriptURL]);\n\n    return (\n        <div>\n            <div className=\"meetings-iframe-container\" data-src={meetingsURL}></div>\n        </div>\n    );\n};\n\nexport default ScheduleADemo;\n","import React from 'react';\nimport { Navbar } from 'react-bootstrap';\nimport ScheduleADemo from './components/ScheduleADemo';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <React.Fragment>\n        <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"#home\">Unio Test Harness</Navbar.Brand>\n        </Navbar>\n        <ScheduleADemo \n            meetingsURL=\"https://meetings.hubspot.com/rae-morales?embed=true\"\n            embedScriptURL=\"https://static.hsappstatic.net/MeetingsEmbed/ex/MeetingsEmbedCode.js\"\n        />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}